name: Check & Deploy

on: [push, pull_request]

jobs:
  install-stable:
    runs-on: ubuntu-latest
    steps:
      - name: install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
  fmt:
    runs-on: ubuntu-latest
    needs: install-stable
    steps:
      - uses: actions/checkout@v2

      - run: cargo +stable fmt -- --check
  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: miri

      - run: cargo +nightly miri test --no-default-features
  clippy:
    runs-on: ubuntu-latest
    needs: install-stable
    steps:
      - uses: actions/checkout@v2

      - run: cargo +stable clippy
        env:
          RUSTFLAGS: -D warnings
  all-features:
    runs-on: ubuntu-latest
    needs: install-stable
    steps:
      - uses: actions/checkout@v2

      - run: cargo +stable test --all-features
  guide:
    runs-on: ubuntu-latest
    needs: [fmt, miri, clippy, all-features]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: download mdbook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "latest"

      - run: mdbook build -d guide
        working-directory: ./guide

      - name: save guide
        uses: actions/upload-artifact@v2
        with:
          name: guide
          path: guide/guide
  bunny_demo:
    runs-on: ubuntu-latest
    needs: [fmt, miri, clippy, all-features]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - run: rustup +stable target add wasm32-unknown-unknown

      - name: install node
        uses: actions/setup-node@v1

      - name: install npm deps
        run: npm ci
        working-directory: ./bunny_demo

      - run: npm run build
        working-directory: ./bunny_demo

      - run: mv ./bunny_demo/public ./bunny_demo/bunny_demo

      - name: save bunny_demo
        uses: actions/upload-artifact@v2
        with:
          name: bunny_demo
          path: bunny_demo/bunny_demo
  deploy:
    runs-on: ubuntu-latest
    needs: [guide, bunny_demo]
    if: github.event_name == 'push'
    steps:
      - name: load guide
        uses: actions/download-artifact@v2
        with:
          name: guide
          path: dist/guide

      - name: load bunny_demo
        uses: actions/download-artifact@v2
        with:
          name: bunny_demo
          path: dist/bunny_demo

      - name: deploy to gh pages
        uses: maxheld83/ghpages@master
        env:
          BUILD_DIR: "dist/"
          GH_PAT: ${{ secrets.GH_PAT }}
