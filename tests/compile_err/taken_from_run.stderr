error[E0373]: closure may outlive the current function, but it borrows `result`, which is owned by the current function
  --> $DIR/taken_from_run.rs:10:68
   |
10 |         unsafe { WORLD.as_ref().unwrap() }.run::<&mut usize, _, _>(|usizes| result = Some(usizes));
   |                                                                    ^^^^^^^^ ------ `result` is borrowed here
   |                                                                    |
   |                                                                    may outlive borrowed value `result`
   |
note: closure is returned here
  --> $DIR/taken_from_run.rs:11:9
   |
11 |         result.unwrap()
   |         ^^^^^^^^^^^^^^^
help: to force the closure to take ownership of `result` (and any other referenced variables), use the `move` keyword
   |
10 |         unsafe { WORLD.as_ref().unwrap() }.run::<&mut usize, _, _>(move |usizes| result = Some(usizes));
   |                                                                    ^^^^^^^^^^^^^

error[E0505]: cannot move out of `result` because it is borrowed
  --> $DIR/taken_from_run.rs:11:9
   |
10 |         unsafe { WORLD.as_ref().unwrap() }.run::<&mut usize, _, _>(|usizes| result = Some(usizes));
   |                                                                    -------- ------ borrow occurs due to use in closure
   |                                                                    |
   |                                                                    borrow of `result` occurs here
11 |         result.unwrap()
   |         ^^^^^^---------
   |         |
   |         move out of `result` occurs here
   |         returning this value requires that `result` is borrowed for `'static`
